name: Tests

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        deno-version: [v2.x]
        include:
          - os: ubuntu-latest
            deno-version: canary

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Deno
        uses: denoland/setup-deno@v1
        with:
          deno-version: ${{ matrix.deno-version }}

      - name: Verify formatting
        # Skip formatting check on Windows due to line ending differences
        if: runner.os != 'Windows'
        run: deno fmt --check

      - name: Run linter
        run: deno lint

      - name: Type check
        run: deno check src/**/*.ts

      - name: Run unit tests
        run: deno test --allow-env --allow-read --allow-write tests/unit/

      - name: Run integration tests
        if: matrix.os == 'ubuntu-latest' && github.event_name == 'push' && github.ref == 'refs/heads/main'
        env:
          GITHUB_TOKEN: ${{ secrets.TEST_GITHUB_TOKEN }}
          RUN_INTEGRATION_TESTS: "true"
        run: deno test --allow-env --allow-net --allow-read --allow-write tests/integration/

      - name: Generate coverage
        if: matrix.os == 'ubuntu-latest' && matrix.deno-version == 'v1.x'
        run: deno test --allow-env --allow-read --allow-write --coverage=coverage tests/unit/

      - name: Create coverage report
        if: matrix.os == 'ubuntu-latest' && matrix.deno-version == 'v1.x'
        run: |
          deno coverage coverage --lcov > coverage.lcov
