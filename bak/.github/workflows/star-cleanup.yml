name: Quarterly Star Cleanup

on:
  # Run quarterly on the 1st day of Jan, Apr, Jul, Oct at 9 AM UTC
  schedule:
    - cron: '0 9 1 1,4,7,10 *'
  
  # Allow manual trigger
  workflow_dispatch:
    inputs:
      dry_run:
        description: 'Dry run (no actual changes)'
        required: false
        default: 'false'
        type: choice
        options:
          - 'true'
          - 'false'
      cutoff_months:
        description: 'Months of inactivity before removal'
        required: false
        default: '24'
        type: string

jobs:
  cleanup-stars:
    runs-on: ubuntu-latest
    name: Clean up old GitHub stars
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Set up environment
        run: |
          echo "GITHUB_TOKEN=${{ secrets.STAR_MANAGEMENT_TOKEN }}" >> $GITHUB_ENV
          echo "DRY_RUN=${{ github.event.inputs.dry_run || 'false' }}" >> $GITHUB_ENV
          echo "CUTOFF_MONTHS=${{ github.event.inputs.cutoff_months || '24' }}" >> $GITHUB_ENV
      
      - name: Run star cleanup
        run: ./scripts/cleanup-stars.sh
      
      - name: Create issue if stars were removed
        if: success() && env.DRY_RUN == 'false'
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const date = new Date().toISOString().split('T')[0];
            const issue = await github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: `Star Cleanup Report - ${date}`,
              body: `## Quarterly Star Cleanup Completed\n\nThe automated star cleanup has run. Check the [workflow run](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}) for details.`,
              labels: ['automation', 'star-cleanup']
            });
            console.log(`Created issue #${issue.data.number}`);